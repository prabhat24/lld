# Generated by Django 5.0.6 on 2024-06-17 20:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('metadata', models.JSONField(blank=True, null=True, verbose_name='metadata information related to author like age, email')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('label', models.CharField(max_length=40)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('location_identifier', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('metadata', models.JSONField(blank=True, null=True, verbose_name='metadata information related to Book like description')),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('category', models.ManyToManyField(to='books.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(blank=True, editable=False, max_length=255)),
                ('price', models.FloatField()),
                ('format', models.CharField(choices=[('HARDCOVER', 'HARDCOVER'), ('PAPERBACK', 'PAPERBACK'), ('AUDIO_BOOK', 'AUDIO_BOOK'), ('EBOOK', 'EBOOK'), ('NEWSPAPER', 'NEWSPAPER'), ('MAGAZINE', 'MAGAZINE'), ('JOURNAL', 'JOURNAL')], default='PAPERBACK', max_length=15)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('metadata', models.JSONField(verbose_name='metadata information related to book item for future')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('RESERVED', 'Reserved by someone earlier'), ('LOANED', 'Already borrowed'), ('LOST', 'Lost'), ('DELETED', 'DELETED')], default='AVAILABLE', max_length=15)),
                ('author', models.ManyToManyField(to='books.author', verbose_name='select author, search functionality is effected if author not present')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='books.book')),
                ('category', models.ManyToManyField(to='books.category')),
                ('rack', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.rack')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
